<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.justdo.mapper.ReplyMapper">
	
	<!-- 댓글등록 -->
	<insert id="insert">
		insert into TBL_REPLY (bno, reply, replyer)
		values(#{bno}, #{reply}, #{replyer})
	</insert>
	
	<!-- 대댓글 등록 -->
	<insert id="reInsert">
		insert into TBL_R_REPLY(rno, r_reply, r_replyer)
		values(#{rno}, #{r_reply}, #{r_replyer})
	</insert>
	
	<!-- 댓글 1개 조회 -->
	<select id="read" resultType="com.justdo.domain.ReplyVO">
		select * from TBL_REPLY where rno = #{rno}
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id="delete">
		delete from TBL_REPLY where rno = #{no}
	</delete>
	
	<!-- 대댓글이 달린 댓글 삭제 -->
	<update id="deleteExist">
		update TBL_REPLY set exist = 1 where rno = #{no}
	</update>
	
	<!-- 대댓글 삭제 -->
	<delete id="deleteRe">
		delete from TBL_R_REPLY where r_rno = #{no}
	</delete>
	
	<!-- 댓글 수정 -->
	<update id="update">
		update TBL_REPLY set reply = #{reply}, updatedate = sysdate() where rno = #{rno}
	</update>
	
	<!-- 대댓글 수정 -->
	<update id="updateRe">
		update TBL_R_REPLY set r_reply = #{reply}, r_updatedate = sysdate() where r_rno = #{rno}
	</update>
	
	<!-- 댓글 목록 가져오기 -->
	<select id="getListWithPaging" resultType="com.justdo.domain.ReplyVO">
		select rno, bno, reply,replydate, updatedate,exist, TBL_MEMBER.member_filename,
		(select TBL_MEMBER.nickname from TBL_MEMBER where TBL_REPLY.replyer = TBL_MEMBER.userid) replyer
		from TBL_REPLY, TBL_MEMBER
		where bno = #{bno} and TBL_REPLY.replyer = TBL_MEMBER.userid
		order by rno asc
		limit #{cri.startIndex}, #{cri.amount}
	</select>
	
	<!-- 대댓글 가져오기 -->
	<select id="getReReplyList" resultType="com.justdo.domain.ReReplyVO">
		select rr.r_rno,rr.r_reply,rr.rno,rr.r_replydate,rr.r_updatedate, TBL_MEMBER.member_filename,
		(select nickname from TBL_MEMBER where rr.r_replyer = TBL_MEMBER.userid) r_replyer
		from TBL_R_REPLY rr, (
			select rno
			from TBL_REPLY
			where bno = #{bno}
			limit #{cri.startIndex}, #{cri.amount}
		) r,TBL_MEMBER
		where rr.rno = r.rno and rr.r_replyer = TBL_MEMBER.userid;
	</select>
	
	<!-- 댓글 총 개수 가져오기 (페이징) -->
	<select id="getCountByBno" resultType="int">
		select count(rno) from TBL_REPLY where bno = #{bno}
	</select>
	
	<!-- TBL_BOARD의 REPLY_COUNT 구하기 -->
	<select id="getReplyCount" resultType="int">
		select reply_count from tbl_board where bno = #{bno}
	</select>
	
	
	<!-- 댓글 등록 시 댓글 수 +1-->
	<update id="updateReplyCnt">
		update TBL_BOARD set reply_count = reply_count + 1 where bno = #{bno}
	</update>
	
	
</mapper>